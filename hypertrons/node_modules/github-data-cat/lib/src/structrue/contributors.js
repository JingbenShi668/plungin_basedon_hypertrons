"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commitsPerPage = 20;
async function getContributors(client, owner, name, branchName, commitLimit) {
    let commitsInfo;
    let pageInfo;
    let commits = [];
    do {
        commitsInfo = await client.query(getCommitsSql, {
            owner,
            name,
            branchName,
            commitCount: commitsPerPage,
            cursor: pageInfo ? pageInfo.endCursor : null
        });
        if (!commitsInfo || !commitsInfo.repository || !commitsInfo.repository.ref ||
            !commitsInfo.repository.ref.target || commitsInfo.repository.ref.target.history.nodes.length === 0)
            break;
        commits = commits.concat(commitsInfo.repository.ref.target.history.nodes);
        pageInfo = commitsInfo.repository.ref.target.history.pageInfo;
        if (commitLimit && commits.length > commitLimit)
            break;
    } while (pageInfo.hasNextPage);
    let contributors = [];
    commits.filter(c => c.author && c.author.user).forEach(c => {
        let date = c.pushedDate ? c.pushedDate : c.committedDate;
        let contributor = contributors.find(con => con.login === c.author.user.login);
        let email = c.author.user.email ? c.author.user.email : c.author.email;
        if (!contributor) {
            contributors.push({
                login: c.author.user.login,
                time: date,
                email
            });
        }
        else if (new Date(contributor.time) > new Date(date)) {
            contributor.time = date;
        }
        else {
            contributor.email = email;
        }
    });
    return contributors;
}
exports.getContributors = getContributors;
const getCommitsSql = `
query getCommits($owner: String!, $name: String!, $branchName: String!, $commitCount: Int, $cursor: String) {
    rateLimit {
        resetAt
        remaining
        cost
    }
    repository(owner: $owner, name: $name) {
        ref(qualifiedName: $branchName) {
            target {
                ... on Commit {
                    history(author: {}, first: $commitCount, after:$cursor) {
                        pageInfo {
                            hasNextPage
                            endCursor
                        }
                        nodes {
                            author {
                                email
                                user {
                                    login
                                    email
                                }
                            }
                            pushedDate
                            committedDate
                        }
                    }
                }
            }
        }
    }
}
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJpYnV0b3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cnVjdHJ1ZS9jb250cmlidXRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFHQSxNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUM7QUFFbkIsS0FBSyxVQUFVLGVBQWUsQ0FBQyxNQUFvQixFQUFFLEtBQWEsRUFBRSxJQUFZLEVBQUUsVUFBa0IsRUFBRSxXQUFvQjtJQUMvSCxJQUFJLFdBQXdCLENBQUE7SUFDNUIsSUFBSSxRQUFrQixDQUFDO0lBQ3ZCLElBQUksT0FBTyxHQUFvQixFQUFFLENBQUM7SUFDbEMsR0FBRztRQUNELFdBQVcsR0FBRyxNQUFNLE1BQU0sQ0FBQyxLQUFLLENBQXdCLGFBQWEsRUFBRTtZQUNyRSxLQUFLO1lBQ0wsSUFBSTtZQUNKLFVBQVU7WUFDVixXQUFXLEVBQUUsY0FBYztZQUMzQixNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJO1NBQzdDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxHQUFHO1lBQ3hFLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsTUFBTSxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDO1lBQUUsTUFBTTtRQUM1RyxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ3pFLFFBQVEsR0FBRyxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztRQUM5RCxJQUFJLFdBQVcsSUFBSSxPQUFPLENBQUMsTUFBTSxHQUFHLFdBQVc7WUFBRSxNQUFNO0tBQ3hELFFBQVEsUUFBUSxDQUFDLFdBQVcsRUFBRTtJQUMvQixJQUFJLFlBQVksR0FBZ0MsRUFBRSxDQUFDO0lBQ25ELE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ3pELElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUM7UUFDekQsSUFBSSxXQUFXLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUUsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDaEIsWUFBWSxDQUFDLElBQUksQ0FBQztnQkFDaEIsS0FBSyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUs7Z0JBQzFCLElBQUksRUFBRSxJQUFJO2dCQUNWLEtBQUs7YUFDTixDQUFDLENBQUM7U0FDSjthQUFNLElBQUksSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3RELFdBQVcsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1NBQ3pCO2FBQU07WUFDTCxXQUFXLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztTQUMzQjtJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxZQUFZLENBQUM7QUFDdEIsQ0FBQztBQXBDRCwwQ0FvQ0M7QUFtQ0QsTUFBTSxhQUFhLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQWlDckIsQ0FBQyJ9