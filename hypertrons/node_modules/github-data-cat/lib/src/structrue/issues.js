"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const issuesPerPage = 5;
const commentCount = 100;
const labelCount = 10;
function parseIssue(i) {
    return {
        id: i.id,
        author: i.author.login,
        number: i.number,
        createdAt: i.createdAt,
        updatedAt: i.updatedAt,
        closedAt: i.closedAt,
        title: i.title,
        body: i.body,
        labels: i.labels.nodes.map(l => l.name),
        comments: i.comments.nodes.filter(c => c.author).map(c => {
            return {
                id: c.id,
                login: c.author.login,
                body: c.body,
                url: c.url,
                createdAt: c.createdAt
            };
        })
    };
}
async function getIssues(client, owner, name, updatedAfter) {
    let issuesInfo;
    let pageInfo;
    let issues = [];
    do {
        issuesInfo = await client.query(getIssueSql, {
            owner,
            name,
            issueCount: issuesPerPage,
            cursor: pageInfo ? pageInfo.endCursor : null,
            labelCount,
            commentCount
        });
        if (!issuesInfo || !issuesInfo.repository || !issuesInfo.repository.issues || issuesInfo.repository.issues.nodes.length === 0)
            break;
        if (updatedAfter && new Date(issuesInfo.repository.issues.nodes[issuesInfo.repository.issues.nodes.length - 1].updatedAt) <= updatedAfter) {
            issues = issues.concat(issuesInfo.repository.issues.nodes.filter(i => i.author && new Date(i.updatedAt) >= updatedAfter).map(parseIssue));
            break;
        }
        issues = issues.concat(issuesInfo.repository.issues.nodes.filter(i => i.author).map(parseIssue));
        pageInfo = issuesInfo.repository.issues.pageInfo;
    } while (pageInfo.hasNextPage);
    return issues;
}
exports.getIssues = getIssues;
const getIssueSql = `
query getIssues($owner: String!, $name: String!, $issueCount: Int, $cursor: String, $labelCount: Int, $commentCount: Int) {
    rateLimit {
        resetAt
        remaining
        cost
    }
    repository(owner: $owner, name: $name) {
        issues(first: $issueCount, orderBy: {field: UPDATED_AT, direction: DESC}, after: $cursor) {
            pageInfo {
                hasNextPage
                endCursor
            }
            nodes {
                id: databaseId
                title
                body
                number
                createdAt
                updatedAt
                closedAt
                author {
                    login
                }
                labels(first: $labelCount) {
                    nodes {
                        name
                    }
                }
                comments(first: $commentCount) {
                    nodes {
                        id: databaseId
                        body
                        url
                        author {
                            login
                        }
                        createdAt
                    }
                }
            }
        }
    }
}
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNzdWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cnVjdHJ1ZS9pc3N1ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFHQSxNQUFNLGFBQWEsR0FBRyxDQUFDLENBQUM7QUFDeEIsTUFBTSxZQUFZLEdBQUcsR0FBRyxDQUFDO0FBQ3pCLE1BQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztBQUV0QixTQUFTLFVBQVUsQ0FBQyxDQUFXO0lBQzdCLE9BQU87UUFDTCxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUU7UUFDUixNQUFNLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1FBQ3RCLE1BQU0sRUFBRSxDQUFDLENBQUMsTUFBTTtRQUNoQixTQUFTLEVBQUUsQ0FBQyxDQUFDLFNBQVM7UUFDdEIsU0FBUyxFQUFFLENBQUMsQ0FBQyxTQUFTO1FBQ3RCLFFBQVEsRUFBRSxDQUFDLENBQUMsUUFBUTtRQUNwQixLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUs7UUFDZCxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUk7UUFDWixNQUFNLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUN2QyxRQUFRLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUN2RCxPQUFPO2dCQUNMLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRTtnQkFDUixLQUFLLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLO2dCQUNyQixJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUk7Z0JBQ1osR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHO2dCQUNWLFNBQVMsRUFBRSxDQUFDLENBQUMsU0FBUzthQUN2QixDQUFDO1FBQ0osQ0FBQyxDQUFDO0tBQ0gsQ0FBQztBQUNKLENBQUM7QUFFTSxLQUFLLFVBQVUsU0FBUyxDQUFDLE1BQW9CLEVBQUUsS0FBYSxFQUFFLElBQVksRUFBRSxZQUFtQjtJQUNwRyxJQUFJLFVBQXNCLENBQUM7SUFDM0IsSUFBSSxRQUFrQixDQUFDO0lBQ3ZCLElBQUksTUFBTSxHQUFZLEVBQUUsQ0FBQztJQUN6QixHQUFHO1FBQ0QsVUFBVSxHQUFHLE1BQU0sTUFBTSxDQUFDLEtBQUssQ0FBdUIsV0FBVyxFQUFFO1lBQ2pFLEtBQUs7WUFDTCxJQUFJO1lBQ0osVUFBVSxFQUFFLGFBQWE7WUFDekIsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSTtZQUM1QyxVQUFVO1lBQ1YsWUFBWTtTQUNiLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxVQUFVLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLElBQUksVUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDO1lBQUUsTUFBTTtRQUNySSxJQUFJLFlBQVksSUFBSSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxZQUFZLEVBQUU7WUFDekksTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLFlBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQzFJLE1BQU07U0FDUDtRQUNELE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDakcsUUFBUSxHQUFHLFVBQVUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQztLQUNsRCxRQUFRLFFBQVEsQ0FBQyxXQUFXLEVBQUU7SUFDL0IsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQXRCRCw4QkFzQkM7QUF5Q0QsTUFBTSxXQUFXLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBNENuQixDQUFDIn0=