"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const starCountPerPage = 20;
function parseStar(starInfo) {
    return {
        login: starInfo.node.login,
        time: starInfo.starredAt
    };
}
async function getStars(client, owner, name, updatedAfter) {
    let stars = [];
    let starInfo;
    let pageInfo;
    do {
        starInfo = await client.query(getStarSql, {
            owner,
            name,
            starCount: starCountPerPage,
            cursor: pageInfo ? pageInfo.endCursor : null
        });
        if (!starInfo || !starInfo.repository || !starInfo.repository.stargazers || starInfo.repository.stargazers.edges.length === 0)
            break;
        if (updatedAfter && new Date(starInfo.repository.stargazers.edges[starInfo.repository.stargazers.edges.length - 1].starredAt) <= updatedAfter) {
            stars = stars.concat(starInfo.repository.stargazers.edges.filter(e => e.node && e.node.login && new Date(e.starredAt) >= updatedAfter).map(parseStar));
            break;
        }
        stars = stars.concat(starInfo.repository.stargazers.edges.filter(e => e.node && e.node.login).map(parseStar));
        pageInfo = starInfo.repository.stargazers.pageInfo;
    } while (pageInfo.hasNextPage);
    return stars;
}
exports.getStars = getStars;
const getStarSql = `
query getMoreStars($owner: String!, $name: String!, $starCount: Int, $cursor: String) {
    rateLimit {
        resetAt
        remaining
        cost
    }
    repository(owner: $owner, name: $name) {
        stargazers(first: $starCount, orderBy: {field: STARRED_AT, direction: DESC}, after: $cursor) {
            pageInfo {
                hasNextPage
                endCursor
            }
            edges {
                starredAt
                node {
                    login
                }
            }
        }
    }
}
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RydWN0cnVlL3N0YXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EsTUFBTSxnQkFBZ0IsR0FBRyxFQUFFLENBQUM7QUFFNUIsU0FBUyxTQUFTLENBQUMsUUFBcUI7SUFDcEMsT0FBTztRQUNILEtBQUssRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUs7UUFDMUIsSUFBSSxFQUFFLFFBQVEsQ0FBQyxTQUFTO0tBQzNCLENBQUE7QUFDTCxDQUFDO0FBRU0sS0FBSyxVQUFVLFFBQVEsQ0FBQyxNQUFvQixFQUFFLEtBQWEsRUFBRSxJQUFZLEVBQUUsWUFBbUI7SUFDakcsSUFBSSxLQUFLLEdBQXdCLEVBQUUsQ0FBQztJQUNwQyxJQUFJLFFBQWtCLENBQUM7SUFDdkIsSUFBSSxRQUFrQixDQUFDO0lBQ3ZCLEdBQUc7UUFDQyxRQUFRLEdBQUcsTUFBTSxNQUFNLENBQUMsS0FBSyxDQUFxQixVQUFVLEVBQUU7WUFDMUQsS0FBSztZQUNMLElBQUk7WUFDSixTQUFTLEVBQUUsZ0JBQWdCO1lBQzNCLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUk7U0FDL0MsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFVBQVUsSUFBSSxRQUFRLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUM7WUFBRSxNQUFNO1FBQ3JJLElBQUksWUFBWSxJQUFJLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLFlBQVksRUFBRTtZQUMzSSxLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksWUFBWSxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDdkosTUFBTTtTQUNUO1FBQ0QsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUM5RyxRQUFRLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDO0tBQ3RELFFBQVEsUUFBUSxDQUFDLFdBQVcsRUFBRTtJQUMvQixPQUFPLEtBQUssQ0FBQztBQUNqQixDQUFDO0FBcEJELDRCQW9CQztBQXlCRCxNQUFNLFVBQVUsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXNCbEIsQ0FBQyJ9